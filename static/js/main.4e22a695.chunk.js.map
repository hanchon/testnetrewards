{"version":3,"sources":["components/searchBar/searchBar.tsx","images/logo.svg","images/rektdrop.svg","images/rewards.svg","images/arrowright.svg","pages/landing/landing.tsx","pages/loading/loading.tsx","images/magnifyingglass.svg","images/cardimage.svg","assets/missiondata.ts","pages/dashboard/dashboard.tsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","placeholderText","isLarge","className","type","name","placeholder","LandingPage","searchForWallet","onSubmit","event","preventDefault","address","target","value","src","logo","alt","rektdrop","rewards","arrowright","LoadingPage","SpinnerRoundOutlined","color","speed","thickness","generateMission","id","task","points","reward_category","MissionData","mission1","mission2","mission3","GridLayout","require","ResponsiveGridLayout","WidthProvider","Responsive","DashboardGrid","userMissions","allMissions","Object","values","flatMap","array","index","map","val","missionId","layout","keys","createLayout","numItemsPerRow","key","i","x","y","Math","floor","w","h","static","defaultLayout","lg","md","sm","xs","getLayoutForKeys","mission","toString","containerPadding","layouts","breakpoints","rowHeight","margin","cols","cardimage","includes","style","background","DashboardPage","userAddress","totalNumMissions","length","reduce","a","b","numComplete","dateLastUpdated","filter","Date","toLocaleDateString","year","month","day","hour","minute","magnifyingglass","flex","App","React","useState","page","setPage","setUserAddress","setUserMissions","fetch","then","response","json","data","missions","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e22a695.chunk.js","sourcesContent":["import './searchBar.css';\n\nimport magnifyingglass from '../../images/magnifyingglass.svg';\n\nexport default function SearchBar(props: any) {\n  const {placeholderText, isLarge} = props;\n\n  return (\n    <div className={`base ${isLarge && 'base-large'}`}>\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        name=\"address\"\n        placeholder={placeholderText}\n      />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.685af0d0.svg\";","export default __webpack_public_path__ + \"static/media/rektdrop.a8c1bef3.svg\";","export default __webpack_public_path__ + \"static/media/rewards.2f95929b.svg\";","export default __webpack_public_path__ + \"static/media/arrowright.8a5cb542.svg\";","import './landing.css';\nimport '../../index.css';\nimport SearchBar from 'src/components/searchBar/searchBar';\nimport logo from '../../images/logo.svg';\nimport rektdrop from '../../images/rektdrop.svg';\nimport rewards from '../../images/rewards.svg';\nimport arrowright from '../../images/arrowright.svg';\n\nexport default function LandingPage(props: any) {\n  const {searchForWallet} = props;\n  const submitRequest = (event: any) => {\n    event.preventDefault();\n\n    const address = event.target[0].value ?? '';\n    searchForWallet(address);\n  };\n\n  return (\n    <form onSubmit={submitRequest}>\n      <div className=\"page-base la--base\">\n        <div className=\"page-body\">\n          <img src={logo} alt=\"Evmos\" className=\"la--logo\" />\n          <img src={rektdrop} alt=\"Rektdrop\" className=\"la--title\" />\n          <img src={rewards} alt=\"Rewards\" className=\"la--subtitle\" />\n          <div className=\"la--search\">\n            <SearchBar placeholderText=\"Enter your Evmos hex or bec32 address\" />\n            <button className=\"la--button\" type=\"submit\">\n              <img src={arrowright} alt=\"Arrow Right\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import './loading.css';\nimport '../../index.css';\n\nimport {SpinnerRoundOutlined} from 'spinners-react';\n\nexport default function LoadingPage() {\n  return (\n    <div className=\"page-base lo--page-base\">\n      <div className=\"page-body lo--page-body\">\n        <h3 className=\"lo--title\">LOADING</h3>\n        <SpinnerRoundOutlined color=\"#F4DDB5\" speed={125} thickness={80} />\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/magnifyingglass.ada4c424.svg\";","export default __webpack_public_path__ + \"static/media/cardimage.11dbfb14.svg\";","const generateMission = (\n  id: number,\n  task: string,\n  points: number,\n  reward_category: number,\n) => {\n  return {\n    id,\n    task,\n    points,\n    reward_category,\n  };\n};\n\nconst MissionData = {\n  mission1: [\n    generateMission(\n      0,\n      'Be in the set of top 20 participants who have interacted with the most unique smart contracts in an eligible way',\n      50,\n      1,\n    ),\n    generateMission(\n      1,\n      'Deploy a verified smart contract and garner eligible interactions from at least 500 unique registered addresses',\n      20,\n      1,\n    ),\n    generateMission(\n      2,\n      'Deploy a verified DeFi-related smart contract and garner eligible interactions from at least 100 unique registered addresses',\n      15,\n      1,\n    ),\n    generateMission(\n      3,\n      'Deploy a verified NFT-related smart contract and garner eligible interactions from at least 100 unique registered addresses',\n      15,\n      1,\n    ),\n    generateMission(\n      4,\n      'Deploy a verified DAO-related smart contract and garner eligible interactions from at least 100 unique registered addresses',\n      15,\n      1,\n    ),\n    generateMission(5, 'Deploy any verified smart contract', 5, 1),\n    generateMission(\n      6,\n      \"Deploy a verified smart contract that leverages Evmos' Intrarelayer module\",\n      30,\n      2,\n    ),\n    generateMission(\n      7,\n      'Convert an EVM ERC20 token into a Cosmos SDK coin, or vice versa',\n      5,\n      2,\n    ),\n    generateMission(\n      8,\n      'Be in the set of the first 50 addresses who carry out an eligible IBC transfer',\n      20,\n      3,\n    ),\n    generateMission(\n      9,\n      'Carry out an outbound IBC transfer of an EVM ERC20 that has been converted into a Cosmos SDK coin',\n      30,\n      3,\n    ),\n    generateMission(\n      10,\n      'Deploy a verified bridge-related (EVM) smart contract and garner eligible interactions from at least 300 unique registered addresses',\n      50,\n      3,\n    ),\n    generateMission(\n      11,\n      'Make an eligible governance proposal that ends up reaching quorum',\n      10,\n      4,\n    ),\n    generateMission(\n      12,\n      'Have any amount of tokens delegated to any validator for more than 75% of the Olympus Mons runtime',\n      5,\n      4,\n    ),\n    generateMission(\n      13,\n      'Vote on an eligible governance proposal that ends up reaching quorum',\n      5,\n      4,\n    ),\n  ],\n  mission2: [\n    generateMission(14, 'Build a wallet', 50, 1),\n    generateMission(\n      15,\n      'Build and host a UI for a verified smart contract',\n      50,\n      1,\n    ),\n    generateMission(\n      16,\n      'Build a dashboard or block explorer with all of the following parameters represented: validator status and staking information, governance parameters, common chain metrics like: block height, tps, block and tx indexing',\n      30,\n      2,\n    ),\n    generateMission(17, 'Build a tx tracer', 30, 2),\n    generateMission(\n      18,\n      'Build and host a UI that represent gas usage and fees across the network',\n      20,\n      2,\n    ),\n    generateMission(\n      19,\n      'Helping to close one or more significant issues in repos for the following projects: https://bit.ly/3D1VKGN',\n      20,\n      3,\n    ),\n    generateMission(\n      20,\n      'Build tools that aid in indexing, e.g. Ethereum ETL',\n      50,\n      4,\n    ),\n    generateMission(\n      21,\n      'Build tools for interacting with validators directly, e.g. mev-geth',\n      50,\n      4,\n    ),\n  ],\n  mission3: [\n    generateMission(22, 'Critical vulnerability', 150, 1),\n    generateMission(23, 'High severity bug', 75, 1),\n    generateMission(24, 'Medium severity bug', 50, 1),\n    generateMission(25, 'Log severity bug', 10, 1),\n    generateMission(26, 'Informational finding', 5, 1),\n    generateMission(27, 'Submit a ≥10% performance improvement', 50, 2),\n    generateMission(28, 'Submit a ≥5% performance improvement', 20, 2),\n    generateMission(\n      29,\n      'Document and share proof of an on-chain tx-ordering exploit originating from a registered address',\n      50,\n      3,\n    ),\n    generateMission(\n      30,\n      'Document a potential attack on the networking or p2p layer that would result in an advantage in capturing MEV',\n      30,\n      3,\n    ),\n  ],\n};\n\nexport default MissionData;\n","import React from 'react';\nimport '../landing/landing.css';\nimport './dashboard.css';\nimport '../../index.css';\nimport '../../../node_modules/react-grid-layout/css/styles.css';\nimport '../../../node_modules/react-resizable/css/styles.css';\nimport SearchBar from 'src/components/searchBar/searchBar';\n\nimport magnifyingglass from '../../images/magnifyingglass.svg';\nimport logo from '../../images/logo.svg';\nimport rektdrop from '../../images/rektdrop.svg';\nimport rewards from '../../images/rewards.svg';\nimport cardimage from '../../images/cardimage.svg';\n\nimport MissionData from '../../assets/missiondata';\n\nconst GridLayout = require('react-grid-layout');\n\nconst ResponsiveGridLayout = GridLayout.WidthProvider(GridLayout.Responsive);\n\n/// Helper\nconst getLayoutForKeys = (keys: string[]) => {\n  const createLayout = (numItemsPerRow: number) => {\n    return keys.map((key, index) => ({\n      i: key,\n      x: (index % numItemsPerRow) * 4,\n      y: Math.floor(index / numItemsPerRow) * 2,\n      w: 4,\n      h: 2,\n      static: true,\n    }));\n  };\n\n  const defaultLayout = createLayout(3);\n  const smLayout = createLayout(2);\n  const xsLayout = createLayout(1);\n\n  return {\n    lg: defaultLayout,\n    md: defaultLayout,\n    sm: smLayout,\n    xs: xsLayout,\n  };\n};\n\nfunction DashboardGrid(props: any) {\n  const {userMissions} = props;\n  const allMissions = Object.values(MissionData).flatMap((array, index) =>\n    array.map(val => ({...val, missionId: index + 1})),\n  );\n  const keys = allMissions.map(mission => mission.id.toString());\n\n  const layout = getLayoutForKeys(keys);\n\n  const statusForCard = (id: number, totalPoints: number) => {\n    if (userMissions.includes(id)) {\n      return (\n        <>\n          <div className=\"d--icon\" style={{background: '#1CDC30'}} />\n          <p className=\"d--card--body\">Completed</p>\n        </>\n      );\n    }\n    return (\n      <>\n        <div className=\"d--icon\" style={{background: '#F8A933'}} />\n        <p className=\"d--card--body\">Incomplete</p>\n      </>\n    );\n  };\n\n  return (\n    <ResponsiveGridLayout\n      className=\"layout d--grid\"\n      containerPadding={[0, 0]}\n      layouts={layout}\n      breakpoints={{lg: 1200, md: 996, sm: 768, xs: 480}}\n      rowHeight={200}\n      margin={[48, 48]}\n      cols={{lg: 12, md: 12, sm: 8, xs: 4}}>\n      {allMissions.map(mission => (\n        <div className=\"d--card\" key={mission.id}>\n          <div className=\"d--card--tag\">15 EVMOS</div>\n          <img src={cardimage} alt=\"Card\" />\n          <h3 className=\"d--card--title\">{mission.task}</h3>\n          <div className=\"d--row\">\n            {statusForCard(mission.id, mission.points)}\n          </div>\n          <p className=\"d--card--body\">{`Mission ${mission.missionId} · ${mission.points} pts`}</p>\n        </div>\n      ))}\n    </ResponsiveGridLayout>\n  );\n}\n\nexport default function DashboardPage(props: any) {\n  const {userAddress, userMissions, searchForWallet} = props;\n  const totalNumMissions = Object.values(MissionData)\n    .map(array => array.length)\n    .reduce((a, b) => a + b);\n  const numComplete = userMissions.length;\n  const numIncomplete = totalNumMissions - numComplete;\n\n  // Add to leaderboard\n  // const totalNumPoints = Object.values(MissionData)\n  //   .flatMap(array => array)\n  //   .map(mission => mission.points)\n  //   .reduce((a, b) => a + b);\n\n  const userPoints = Object.values(MissionData)\n    .flatMap(array => array)\n    .filter(mission => userMissions.includes(mission.id))\n    .map(mission => mission.points)\n    .reduce((a, b) => a + b, 0);\n\n  const dateLastUpdated = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: '2-digit',\n    hour: 'numeric',\n    minute: 'numeric',\n  });\n\n  // Search at new address\n  const submitRequest = (event: any) => {\n    event.preventDefault();\n\n    const address = event.target[0].value ?? '';\n    searchForWallet(address);\n  };\n\n  return (\n    <div className=\"page-base d--page-base\">\n      <div className=\"d--page-top\">\n        <div className=\"d--page-header\">\n          <div className=\"d--row d--page-header-mobile\">\n            <img src={logo} alt=\"Evmos\" className=\"d--header-logo\" />\n            <img src={rektdrop} alt=\"Rektdrop\" className=\"d--header-title\" />\n            <img src={rewards} alt=\"Rewards\" className=\"d--header-subtitle\" />\n          </div>\n          <form onSubmit={submitRequest}>\n            <div className=\"d--header-search\">\n              <SearchBar placeholderText={userAddress} isLarge />\n              <button className=\"la--button\" type=\"submit\">\n                <img src={magnifyingglass} alt=\"Arrow Right\" />\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"d--title-container\">\n          <div className=\"d--col\" style={{flex: 1}}>\n            <h3 className=\"d--title d--desktop\">{userAddress}</h3>\n            <p className=\"d--caption\">{`Last Updated – ${dateLastUpdated}`}</p>\n          </div>\n          <h3 className=\"d--subtitle\">{`${numComplete}/${totalNumMissions}`}</h3>\n        </div>\n      </div>\n      <DashboardGrid userMissions={userMissions} />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport LandingPage from './pages/landing/landing.tsx';\nimport LoadingPage from './pages/loading/loading.tsx';\nimport DashboardPage from './pages/dashboard/dashboard.tsx';\n\nfunction App() {\n  const [page, setPage] = React.useState(0);\n  const [userAddress, setUserAddress] = React.useState('');\n  const [userMissions, setUserMissions] = React.useState([]);\n\n  const searchForWallet = address => {\n    setUserAddress(address);\n    setPage(1);\n\n    // Fetch Data (Dummy)\n    // TODO: parse different address types\n    fetch(`https://api.hanchon.live/user_missions/${address}`)\n      .then(response => response.json())\n      .then(data => {\n        setUserMissions(data.missions ?? []);\n        setPage(2);\n      })\n      .catch(error => {\n        // TODO: Render error page\n        setPage(2);\n      });\n  };\n\n  if (page === 0) {\n    return <LandingPage searchForWallet={searchForWallet} />;\n  }\n  if (page === 1) {\n    return <LoadingPage />;\n  }\n  if (page === 2) {\n    return (\n      <DashboardPage\n        userAddress={userAddress}\n        userMissions={userMissions}\n        searchForWallet={searchForWallet}\n      />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}